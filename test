#!/bin/bash

# General setup
git submodule update --init;

# TODO:  Start Vitess, and detect the database URL here
# TODO:  Run MySQL as well so we can compare results for both
if [ "$#" -ne 1 ]; then
	echo "usage: $0 vitess_database_url";
	exit 1;
fi;
VITESS_DATABASE_URL="$1";

username="$(echo "${1}" | cut -d@ -f1 | cut -d/ -f3 | cut -d: -f1)";
password="$(echo "${1}" | cut -d@ -f1 | cut -d: -f3)";
host="$(echo "${1}" | cut -d@ -f2 | cut -d: -f1)";
port="$(echo "${1}" | cut -d@ -f2 | cut -d: -f2 | cut -d/ -f1)";
database="$(echo "${1}" | cut -d@ -f2 | cut -d/ -f2)";

# TODO:  There's a huge opportunity for parallelism here
for language in $(find . -mindepth 3 -maxdepth 3 -type f -name test | sed 's:^\./::' | xargs dirname | xargs dirname | sort -u); do
	echo "${language}:";
	for framework in $(find "${language}" -mindepth 2 -maxdepth 2 -type f -name test | sed 's:^\./::' | xargs dirname | xargs -n1 basename); do
		pushd "${language}/${framework}" >/dev/null;
		./test "${VITESS_DATABASE_URL}" &>/dev/null;
		echo "  ${framework}: $?";
		popd >/dev/null;
		tables="$(mysql --host "${host}" --port "${port}" --user "${username}" "-p${password}" "${database}" -Ne 'SHOW TABLES' 2>/dev/null | sed 's/^\|$/`/g' | xargs echo | sed 's/ /,/g')";
		if [[ "${tables}" != '' ]]; then
			mysql --host "${host}" --port "${port}" --user "${username}" "-p${password}" "${database}" -Ne "DROP TABLE ${tables}" &>/dev/null;
		fi;
	done
done

